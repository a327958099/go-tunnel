# GoReleaser configuration file
project_name: go-tunnel

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: tunnel-server
    main: ./cmd/server
    binary: tunnel-server
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

  - id: tunnel-client
    main: ./cmd/client
    binary: tunnel-client
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - id: default
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- .Arch }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - README_zh.md
      - LICENSE
      - tunnel-server-config.yaml

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'

release:
  github:
    owner: a327958099
    name: go-tunnel
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}} v{{.Version}}"
  header: |
    ## Go Tunnel {{.Tag}}
    
    A lightweight reverse proxy tool for forwarding external requests to local services.
    
    ### Download
    
    Choose the appropriate binary for your platform:
    
    - **Linux AMD64**: `go-tunnel_Linux_amd64.tar.gz`
    - **Linux ARM64**: `go-tunnel_Linux_arm64.tar.gz`
    - **Windows AMD64**: `go-tunnel_Windows_amd64.zip`
    - **Windows ARM64**: `go-tunnel_Windows_arm64.zip`
    - **macOS AMD64**: `go-tunnel_Darwin_amd64.tar.gz`
    - **macOS ARM64 (Apple Silicon)**: `go-tunnel_Darwin_arm64.tar.gz`
    
    ### Installation
    
    1. Download the appropriate archive for your platform
    2. Extract the archive
    3. Run `tunnel-server` on your server and `tunnel-client` on your local machine
    
    For detailed usage instructions, see the [README](https://github.com/a327958099/go-tunnel/blob/main/README.md).